; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init :file "riemann/riemann.log")

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "127.0.0.1"]
  (tcp-server :host host)
  (udp-server :host host)
  (ws-server  :host host))

; REPL
(let [host "127.0.0.1"]
  (repl-server :host host))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)


(load-plugins)
(require '[riemann-timeseries.core :refer [->Influxdb] :as i])


(let [index (index)
      influxdb-client (i/client :db "riemann"
                                :host "localhost"
                                :port 8086
                                :username "root"
                                :password "root")
      influxdb-table-name "all"]

  ; Inbound events will be passed to these streams:
  (streams

    ; Index all events immediately.
    index

    (->Influxdb influxdb-client influxdb-table-name)

    ; Calculate an overall rate of events.
    (with {:metric 1 :host nil :state "ok" :service "events/sec"}
      (rate 5 index))

    ; Log expired events.
    (expired
      (fn [event] (info "expired" event)))
))
